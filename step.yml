#
# A couple of useful guides & docs:
#
# - Main Bitrise CLI docs: https://github.com/bitrise-io/bitrise/tree/master/_docs
# - Step Development Guideline: https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
# - Bitrise.yml format spec: https://github.com/bitrise-io/bitrise/blob/master/_docs/bitrise-yml-format-spec.md
# - Bitrise docs: http://devcenter.bitrise.io/
# - Bitrise CLI guides: http://devcenter.bitrise.io/bitrise-cli/

title: |-
  bitrise-setup-vars
summary: |
  setup envs vars
description: |
  setup envs vars
website: https://github.com/Riccardo0002/bitrise-step-bitrise-setup-vars
source_code_url: https://github.com/Riccardo0002/bitrise-step-bitrise-setup-vars
support_url: https://github.com/Riccardo0002/bitrise-step-bitrise-setup-vars/issues

# If this step should be available only for certain project types
# just uncomment this `project_type_tags` section and include all the
# project types supported by the step. If the step can be used for all
# project types then you can just remove this section.
# If no `project_type_tags` specified (or specified as an empty array)
# that means the step can be used for any project type.
# You can find more information about project type tags in the Step Development Guideline:
# https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
#
# project_type_tags:
#   - ios
#   - macos
#   - android
#   - xamarin
#   - react-native
#   - cordova
#   - ionic
#   - flutter

# Type tags are used for categorizing steps, for easier step discovery in Step Libraries.
# You can find more information about type tags in the Step Development Guideline:
# https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
type_tags:
  - utility

# These properties define whether a Step is run in a given Workflow or not.
# You can find more information about this in the documentation here:
# https://devcenter.bitrise.io/en/steps-and-workflows/developing-your-own-bitrise-step/developing-a-new-step.html#setting-conditions-for-running-the-step
#
# is_always_run: false
# is_skippable: false
# run_if: ""

# Use the `deps` property to declare dependencies that you can fetch from an OS dependency manager.
# You can find more information about this in the documentation here:
# https://devcenter.bitrise.io/en/steps-and-workflows/developing-your-own-bitrise-step/developing-a-new-step.html#submodules-and-step-dependencies
#
# deps:
#   brew:
#   - name: cmake
#   apt_get:
#   - name: cmake


toolkit:
  bash:
    entry_file: step.sh


inputs:
  - environment: ENVIRONMENT VARIABLES
    opts:
      title: ENVIRONMENT VARIABLES
      summary: environments variable
      description: environments variable
  - brand: brand for the application
    opts:
      title: BRAND
      summary: brand for the application
      description: brand for the application
      value_options:
      - "cattolica"
      - "alleanza"
      - "generali"
  - semantic_debugger_enabled: value of debugger enabled
    opts:
      title: DEBUGGER VARIABLE
      summary: debugger variable
      description: debugger variable
      value_options:
      - "true"
      - "false"
  - enable_anti_tampering: value of anti tampering
    opts:
      title: ANTI TAMPERING VARIABLE
      summary: anti tampering variable
      description: anti tampering variable
      value_options:
      - "true"
      - "false"
  - disable_cert_pinning: value of cert pinning
    opts:
      title: CERT PINNING VARIABLE
      summary: cert pinning variable
      description: cert pinning variable
      value_options:
      - "true"
      - "false"
  - build_number: value of build number
    opts:
      title: BUILD NUMBER VARIABLE
      summary: value of build number
      description: value of build number

